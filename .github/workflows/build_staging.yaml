name: Build Staging

on:
  push:
    branches:
      - main

concurrency: build

jobs:
  update-packages-dagger:
    runs-on: ubuntu-latest
    env:
      GHCR_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'poetry'
      - name: Install dependencies
        run: |
          cd ci
          poetry install
      - name: Run dagger pipeline
        run: |
          cd ci
          poetry run python main.py update-versions staging \
          correction_step early_classification_step feature_step lc_classification_step lightcurve-step magstats_step prv_candidates_step s3_step scribe sorting_hat_step watchlist_step xmatch_step

  build-correction-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: correction_step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-early-classification-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: early_classification_step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-feature-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: feature_step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lc-classification-balto-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: lc_classification_step_balto --build-args=model:balto --package-dir=lc_classification_step
        submodules: true
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lc-classification-mlp-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: lc_classification_step_mlp --build-args=model:mlp --package-dir=lc_classification_step
        submodules: true
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lc-classification-messi-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: lc_classification_step_messi --build-args=model:messi --package-dir=lc_classification_step
        submodules: true
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lc-classification-ztf-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: lc_classification_step_ztf --build-args=model:ztf --package-dir=lc_classification_step
        submodules: true
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lightcurve-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: lightcurve-step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-magstats-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: magstats_step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-prv-candidates-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: prv_candidates_step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-s3-step-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: s3_step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-scribe-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: scribe
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-sorting-hat-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: sorting_hat_step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-watchlist-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: watchlist_step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-xmatch-dagger:
    needs: update-packages-dagger
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
        stage: staging
        extra-args: xmatch_step
    secrets:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  release-chart:
    needs:
      - build-correction-dagger
      - build-early-classification-dagger
      - build-feature-dagger
      - build-lc-classification-elasticc-dagger
      - build-lc-classification-ztf-dagger
      - build-lightcurve-dagger
      - build-magstats-dagger
      - build-prv-candidates-dagger
      - build-s3-step-dagger
      - build-scribe-dagger
      - build-sorting-hat-dagger
      - build-watchlist-dagger
      - build-xmatch-dagger
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git
        run: |
          git config user.name "alerceadmin"
          git config user.email "alerceadmin@users.noreply.github.com"
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.ADMIN_TOKEN }}"
