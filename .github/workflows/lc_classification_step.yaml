name: Tests

on:
  pull_request:
    branches:
      - main
    paths:
      - 'lc_classification_step/**'
      - '!lc_classification_step/README.md'

jobs:
  lc_classification_step_lint:
    uses: ./.github/workflows/lint-template.yaml
    with:
      base-folder: 'lc_classification_step'
      sources-folder: 'lc_classification'
  lc_classification_step_unittest:
    uses: ./.github/workflows/poetry-tests-template.yaml
    with:
      base-folder: 'lc_classification_step'
      python-version: '3.8'
      poetry-install: "--with ztf --with elasticc"
      test-folder: "tests/unit"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
      TEST_BALTO_MODEL_PATH: "${{ secrets.TEST_BALTO_MODEL_PATH }}"
      TEST_BALTO_QUANTILES_PATH: "${{ secrets.TEST_BALTO_QUANTILES_PATH }}"
      TEST_MESSI_MODEL_PATH: "${{ secrets.TEST_MESSI_MODEL_PATH }}"
      TEST_MESSI_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MESSI_HEADER_QUANTILES_PATH }}"
      TEST_MESSI_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MESSI_FEATURE_QUANTILES_PATH }}"
      TEST_TORETTO_MODEL_PATH: "${{ secrets.TEST_TORETTO_MODEL_PATH }}"
      TEST_BARNEY_MODEL_PATH: "${{ secrets.TEST_BARNEY_MODEL_PATH }}"
      TEST_MLP_MODEL_PATH: "${{ secrets.TEST_NEW_BARNEY_MODEL_PATH }}"
  lc_classification_step_integration:
    uses: ./.github/workflows/poetry-tests-template.yaml
    with:
      base-folder: 'lc_classification_step'
      python-version: '3.8'
      codecov-flags: ''  # Do not upload
      poetry-install: "--with ztf --with elasticc"
      test-folder: "tests/integration"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
      TEST_BALTO_MODEL_PATH: "${{ secrets.TEST_BALTO_MODEL_PATH }}"
      TEST_BALTO_QUANTILES_PATH: "${{ secrets.TEST_BALTO_QUANTILES_PATH }}"
      TEST_MESSI_MODEL_PATH: "${{ secrets.TEST_MESSI_MODEL_PATH }}"
      TEST_MESSI_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MESSI_HEADER_QUANTILES_PATH }}"
      TEST_MESSI_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MESSI_FEATURE_QUANTILES_PATH }}"
      TEST_TORETTO_MODEL_PATH: "${{ secrets.TEST_TORETTO_MODEL_PATH }}"
      TEST_BARNEY_MODEL_PATH: "${{ secrets.TEST_BARNEY_MODEL_PATH }}"
      TEST_MLP_MODEL_PATH: "${{ secrets.TEST_NEW_BARNEY_MODEL_PATH }}"

  lc_classification_step_build_ztf:
    uses: ./.github/workflows/build-template.yaml
    with:
      base-folder: "lc_classification_step"
      build-context: "."
      step-name: "lc_classification_step_ztf"
      file: "Dockerfile.ztf"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
  lc_classification_step_build_balto:
    uses: ./.github/workflows/build-template.yaml
    with:
      base-folder: "lc_classification_step"
      build-context: "."
      step-name: "lc_classification_step_balto"
      file: "Dockerfile.balto"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
  lc_classification_step_build_messi:
    uses: ./.github/workflows/build-template.yaml
    with:
      base-folder: "lc_classification_step"
      build-context: "."
      step-name: "lc_classification_step_messi"
      file: "Dockerfile.messi"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
  lc_classification_step_build_barney:
    uses: ./.github/workflows/build-template.yaml
    with:
      base-folder: "lc_classification_step"
      build-context: "."
      step-name: "lc_classification_step-barney"
      file: "Dockerfile.barney"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
  lc_classification_step_build_mlp:
    uses: ./.github/workflows/build-template.yaml
    with:
      base-folder: "lc_classification_step"
      build-context: "."
      step-name: "lc_classification_step-mpl"
      file: "Dockerfile.mlp"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
  lc_classification_step_build_toretto:
    uses: ./.github/workflows/build-template.yaml
    with:
      base-folder: "lc_classification_step"
      build-context: "."
      step-name: "lc_classification_step-toretto"
      file: "Dockerfile.toretto"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
