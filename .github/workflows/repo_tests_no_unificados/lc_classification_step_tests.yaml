name: Tests_lc_classification_step
on:
  pull_request:
    paths:
      - 'lc_classification_step/**'
      - '!lc_classification_step/README.md'
    branches:
      - main
jobs:
  lint:
    uses: alercebroker/workflow-templates/.github/workflows/lint.yml@main
    with:
      sources-folder: 'lc_classification_step/lc_classification'
  unittest-ztf:
    uses: alercebroker/workflow-templates/.github/workflows/pip-tests.yml@main
    with:
      python-version: '3.8'
      requirements-file: 'lc_classification_step/requirements_ztf.txt'
      test-command: STREAM=ztf python -m pytest -x lc_classification_step/tests/unit --cov lc_classification/lc_classification --cov-report xml
    secrets:
      GH_TOKEN: '${{ secrets.ADMIN_TOKEN }}'
      TEST_BALTO_MODEL_PATH: "${{ secrets.TEST_BALTO_MODEL_PATH }}"
      TEST_BALTO_QUANTILES_PATH: "${{ secrets.TEST_BALTO_QUANTILES_PATH }}"
      TEST_MESSI_MODEL_PATH: "${{ secrets.TEST_MESSI_MODEL_PATH }}"
      TEST_MESSI_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MESSI_HEADER_QUANTILES_PATH }}"
      TEST_MESSI_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MESSI_FEATURE_QUANTILES_PATH }}"
      TEST_TORETTO_MODEL_PATH: "${{ secrets.TEST_TORETTO_MODEL_PATH }}"
      TEST_BARNEY_MODEL_PATH: "${{ secrets.TEST_BARNEY_MODEL_PATH }}"
  integration-ztf:
    uses: alercebroker/workflow-templates/.github/workflows/pip-tests.yml@main
    with:
      python-version: '3.8'
      requirements-file: 'lc_classification_step/requirements_ztf.txt'
      test-dependencies: pytest pytest-docker
      test-command: STREAM=ztf python -m pytest -x lc_classification_step/tests/integration
      codecov-flags: ''  # Do not upload
    secrets:
      GH_TOKEN: '${{ secrets.ADMIN_TOKEN }}'
      TEST_BALTO_MODEL_PATH: "${{ secrets.TEST_BALTO_MODEL_PATH }}"
      TEST_BALTO_QUANTILES_PATH: "${{ secrets.TEST_BALTO_QUANTILES_PATH }}"
      TEST_MESSI_MODEL_PATH: "${{ secrets.TEST_MESSI_MODEL_PATH }}"
      TEST_MESSI_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MESSI_HEADER_QUANTILES_PATH }}"
      TEST_MESSI_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MESSI_FEATURE_QUANTILES_PATH }}"
      TEST_TORETTO_MODEL_PATH: "${{ secrets.TEST_TORETTO_MODEL_PATH }}"
      TEST_BARNEY_MODEL_PATH: "${{ secrets.TEST_BARNEY_MODEL_PATH }}"
  unittest-elasticc:
    uses: alercebroker/workflow-templates/.github/workflows/pip-tests.yml@main
    with:
      python-version: '3.8'
      requirements-file: 'lc_classification_step/requirements_elasticc.txt'
      test-command: STREAM=elasticc python -m pytest -x lc_classification_step/tests/unit --cov lc_classification/lc_classification --cov-report xml
    secrets:
      GH_TOKEN: '${{ secrets.ADMIN_TOKEN }}'
      TEST_BALTO_MODEL_PATH: "${{ secrets.TEST_BALTO_MODEL_PATH }}"
      TEST_BALTO_QUANTILES_PATH: "${{ secrets.TEST_BALTO_QUANTILES_PATH }}"
      TEST_MESSI_MODEL_PATH: "${{ secrets.TEST_MESSI_MODEL_PATH }}"
      TEST_MESSI_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MESSI_HEADER_QUANTILES_PATH }}"
      TEST_MESSI_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MESSI_FEATURE_QUANTILES_PATH }}"
      TEST_TORETTO_MODEL_PATH: "${{ secrets.TEST_TORETTO_MODEL_PATH }}"
      TEST_BARNEY_MODEL_PATH: "${{ secrets.TEST_BARNEY_MODEL_PATH }}"
  integration-elasticc:
    uses: alercebroker/workflow-templates/.github/workflows/pip-tests.yml@main
    with:
      python-version: '3.8'
      requirements-file: 'lc_classification_step/requirements_elasticc.txt'
      test-dependencies: pytest pytest-docker
      test-command: STREAM=elasticc python -m pytest -x lc_classification_step/tests/integration
      codecov-flags: ''  # Do not upload
    secrets:
      GH_TOKEN: '${{ secrets.ADMIN_TOKEN }}'
      TEST_BALTO_MODEL_PATH: "${{ secrets.TEST_BALTO_MODEL_PATH }}"
      TEST_BALTO_QUANTILES_PATH: "${{ secrets.TEST_BALTO_QUANTILES_PATH }}"
      TEST_MESSI_MODEL_PATH: "${{ secrets.TEST_MESSI_MODEL_PATH }}"
      TEST_MESSI_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MESSI_HEADER_QUANTILES_PATH }}"
      TEST_MESSI_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MESSI_FEATURE_QUANTILES_PATH }}"
      TEST_TORETTO_MODEL_PATH: "${{ secrets.TEST_TORETTO_MODEL_PATH }}"
      TEST_BARNEY_MODEL_PATH: "${{ secrets.TEST_BARNEY_MODEL_PATH }}"