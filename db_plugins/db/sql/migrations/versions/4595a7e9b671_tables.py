"""tables

Revision ID: 4595a7e9b671
Revises: ab4fcd54c81c
Create Date: 2020-07-01 15:07:40.090100

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4595a7e9b671'
down_revision = 'ab4fcd54c81c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('detection', 'alert',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('detection', 'dec',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('detection', 'fid',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('detection', 'magap',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('detection', 'magpsf',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('detection', 'mjd',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('detection', 'oid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('detection', 'ra',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('detection', 'sigmagap',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('detection', 'sigmapsf',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('non_detection', 'diffmaglim',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('non_detection', 'mjd',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.add_column('object', sa.Column('corrected', sa.Boolean(), nullable=True))
    op.add_column('object', sa.Column('g_r_max', sa.Float(), nullable=True))
    op.add_column('object', sa.Column('g_r_max_corr', sa.Float(), nullable=True))
    op.add_column('object', sa.Column('g_r_mean', sa.Float(), nullable=True))
    op.add_column('object', sa.Column('g_r_mean_corr', sa.Float(), nullable=True))
    op.add_column('object', sa.Column('jdendhist', sa.Float(), nullable=True))
    op.add_column('object', sa.Column('jdstarthist', sa.Float(), nullable=True))
    op.add_column('object', sa.Column('ncovhist', sa.Integer(), nullable=True))
    op.add_column('object', sa.Column('ndet', sa.Integer(), nullable=True))
    op.add_column('object', sa.Column('ndethist', sa.Integer(), nullable=True))
    op.add_column('object', sa.Column('stellar', sa.Boolean(), nullable=True))
    op.add_column('object', sa.Column('step_id_corr', sa.String(), nullable=True))
    op.create_index('object_ndet', 'object', ['ndet'], unique=False, postgresql_using='btree')
    op.drop_index('object_nobs', table_name='object')
    op.drop_column('object', 'nobs')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('object', sa.Column('nobs', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_index('object_nobs', 'object', ['nobs'], unique=False)
    op.drop_index('object_ndet', table_name='object')
    op.drop_column('object', 'step_id_corr')
    op.drop_column('object', 'stellar')
    op.drop_column('object', 'ndethist')
    op.drop_column('object', 'ndet')
    op.drop_column('object', 'ncovhist')
    op.drop_column('object', 'jdstarthist')
    op.drop_column('object', 'jdendhist')
    op.drop_column('object', 'g_r_mean_corr')
    op.drop_column('object', 'g_r_mean')
    op.drop_column('object', 'g_r_max_corr')
    op.drop_column('object', 'g_r_max')
    op.drop_column('object', 'corrected')
    op.alter_column('non_detection', 'mjd',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('non_detection', 'diffmaglim',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('detection', 'sigmapsf',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('detection', 'sigmagap',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('detection', 'ra',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('detection', 'oid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('detection', 'mjd',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('detection', 'magpsf',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('detection', 'magap',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('detection', 'fid',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('detection', 'dec',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('detection', 'alert',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    # ### end Alembic commands ###
