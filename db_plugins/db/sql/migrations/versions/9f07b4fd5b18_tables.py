"""tables

Revision ID: 9f07b4fd5b18
Revises: 0e93a429fb77
Create Date: 2020-07-01 15:01:56.001799

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9f07b4fd5b18'
down_revision = '0e93a429fb77'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('object',
    sa.Column('oid', sa.String(), nullable=False),
    sa.Column('nobs', sa.Integer(), nullable=True),
    sa.Column('meanra', sa.Float(), nullable=True),
    sa.Column('meandec', sa.Float(), nullable=True),
    sa.Column('sigmara', sa.Float(), nullable=True),
    sa.Column('sigmadec', sa.Float(), nullable=True),
    sa.Column('deltajd', sa.Float(), nullable=True),
    sa.Column('lastmjd', sa.Float(), nullable=True),
    sa.Column('firstmjd', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('oid')
    )
    op.create_index('object_firstmjd', 'object', ['firstmjd'], unique=False, postgresql_using='btree')
    op.create_index('object_lastmjd', 'object', ['lastmjd'], unique=False, postgresql_using='btree')
    op.create_index('object_nobs', 'object', ['nobs'], unique=False, postgresql_using='btree')
    op.drop_index('object_firstmjd', table_name='astro_object')
    op.drop_index('object_lastmjd', table_name='astro_object')
    op.drop_index('object_nobs', table_name='astro_object')
    op.drop_table('astro_object')
    op.add_column('classification', sa.Column('object', sa.String(), nullable=False))
    op.drop_constraint('classification_astro_object_fkey', 'classification', type_='foreignkey')
    op.create_foreign_key(None, 'classification', 'object', ['object'], ['oid'])
    op.drop_column('classification', 'astro_object')
    op.drop_constraint('detection_oid_fkey', 'detection', type_='foreignkey')
    op.create_foreign_key(None, 'detection', 'object', ['oid'], ['oid'])
    op.drop_constraint('features_object_object_id_fkey', 'features_object', type_='foreignkey')
    op.create_foreign_key(None, 'features_object', 'object', ['object_id'], ['oid'])
    op.drop_constraint('magnitude_statistics_oid_fkey', 'magnitude_statistics', type_='foreignkey')
    op.create_foreign_key(None, 'magnitude_statistics', 'object', ['oid'], ['oid'])
    op.drop_constraint('non_detection_oid_fkey', 'non_detection', type_='foreignkey')
    op.create_foreign_key(None, 'non_detection', 'object', ['oid'], ['oid'])
    op.add_column('outlier_score', sa.Column('object', sa.String(), nullable=False))
    op.drop_constraint('outlier_score_astro_object_fkey', 'outlier_score', type_='foreignkey')
    op.create_foreign_key(None, 'outlier_score', 'object', ['object'], ['oid'])
    op.drop_column('outlier_score', 'astro_object')
    op.drop_constraint('xmatch_oid_fkey', 'xmatch', type_='foreignkey')
    op.create_foreign_key(None, 'xmatch', 'object', ['oid'], ['oid'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'xmatch', type_='foreignkey')
    op.create_foreign_key('xmatch_oid_fkey', 'xmatch', 'astro_object', ['oid'], ['oid'])
    op.add_column('outlier_score', sa.Column('astro_object', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'outlier_score', type_='foreignkey')
    op.create_foreign_key('outlier_score_astro_object_fkey', 'outlier_score', 'astro_object', ['astro_object'], ['oid'])
    op.drop_column('outlier_score', 'object')
    op.drop_constraint(None, 'non_detection', type_='foreignkey')
    op.create_foreign_key('non_detection_oid_fkey', 'non_detection', 'astro_object', ['oid'], ['oid'])
    op.drop_constraint(None, 'magnitude_statistics', type_='foreignkey')
    op.create_foreign_key('magnitude_statistics_oid_fkey', 'magnitude_statistics', 'astro_object', ['oid'], ['oid'])
    op.drop_constraint(None, 'features_object', type_='foreignkey')
    op.create_foreign_key('features_object_object_id_fkey', 'features_object', 'astro_object', ['object_id'], ['oid'])
    op.drop_constraint(None, 'detection', type_='foreignkey')
    op.create_foreign_key('detection_oid_fkey', 'detection', 'astro_object', ['oid'], ['oid'])
    op.add_column('classification', sa.Column('astro_object', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'classification', type_='foreignkey')
    op.create_foreign_key('classification_astro_object_fkey', 'classification', 'astro_object', ['astro_object'], ['oid'])
    op.drop_column('classification', 'object')
    op.create_table('astro_object',
    sa.Column('oid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nobs', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('meanra', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('meandec', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sigmara', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sigmadec', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('deltajd', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lastmjd', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('firstmjd', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('oid', name='astro_object_pkey')
    )
    op.create_index('object_nobs', 'astro_object', ['nobs'], unique=False)
    op.create_index('object_lastmjd', 'astro_object', ['lastmjd'], unique=False)
    op.create_index('object_firstmjd', 'astro_object', ['firstmjd'], unique=False)
    op.drop_index('object_nobs', table_name='object')
    op.drop_index('object_lastmjd', table_name='object')
    op.drop_index('object_firstmjd', table_name='object')
    op.drop_table('object')
    # ### end Alembic commands ###
